// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Stive.Api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20211217133003_create_table_member")]
    partial class create_table_member
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("api.Data.Models.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategorieIdId")
                        .HasColumnType("int");

                    b.Property<int?>("CommandesId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Designation")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("FournisseurIDId")
                        .HasColumnType("int");

                    b.Property<string>("MediaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<float?>("Tva")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategorieIdId");

                    b.HasIndex("CommandesId");

                    b.HasIndex("FournisseurIDId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("api.Data.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("api.Data.Models.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleIDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleIDId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("api.Data.Models.Commandes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientsIDId")
                        .HasColumnType("int");

                    b.Property<int>("TotalArticle")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrix")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClientsIDId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("api.Data.Models.Fournisseurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("api.Data.Models.Inventaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ArticleIdId")
                        .HasColumnType("int");

                    b.Property<int>("DifferenceStock")
                        .HasColumnType("int");

                    b.Property<int>("Quantité")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleIdId");

                    b.ToTable("Inventaire");
                });

            modelBuilder.Entity("api.Data.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("api.Data.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ArticleIdId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("Tampon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleIdId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("api.Data.Models.Articles", b =>
                {
                    b.HasOne("api.Data.Models.Categories", "CategorieId")
                        .WithMany()
                        .HasForeignKey("CategorieIdId");

                    b.HasOne("api.Data.Models.Commandes", null)
                        .WithMany("Articles")
                        .HasForeignKey("CommandesId");

                    b.HasOne("api.Data.Models.Fournisseurs", "FournisseurID")
                        .WithMany()
                        .HasForeignKey("FournisseurIDId");

                    b.Navigation("CategorieId");

                    b.Navigation("FournisseurID");
                });

            modelBuilder.Entity("api.Data.Models.Clients", b =>
                {
                    b.HasOne("api.Data.Models.Roles", "RoleID")
                        .WithMany()
                        .HasForeignKey("RoleIDId");

                    b.Navigation("RoleID");
                });

            modelBuilder.Entity("api.Data.Models.Commandes", b =>
                {
                    b.HasOne("api.Data.Models.Clients", "ClientsID")
                        .WithMany()
                        .HasForeignKey("ClientsIDId");

                    b.Navigation("ClientsID");
                });

            modelBuilder.Entity("api.Data.Models.Inventaire", b =>
                {
                    b.HasOne("api.Data.Models.Articles", "ArticleId")
                        .WithMany()
                        .HasForeignKey("ArticleIdId");

                    b.Navigation("ArticleId");
                });

            modelBuilder.Entity("api.Data.Models.Stock", b =>
                {
                    b.HasOne("api.Data.Models.Articles", "ArticleId")
                        .WithMany()
                        .HasForeignKey("ArticleIdId");

                    b.Navigation("ArticleId");
                });

            modelBuilder.Entity("api.Data.Models.Commandes", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
